package com.techlabs.creational.abstractfactory.test;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.aurionpro.model.BankAccount;
import com.aurionpro.model.CurrentAccount;
import com.aurionpro.model.SavingsAccount;
import com.techlabs.creational.abstractfactory.model.CurrentAccountFactory;
import com.techlabs.creational.abstractfactory.model.IAccount;
import com.techlabs.creational.abstractfactory.model.ICurrentAccountFactory;
import com.techlabs.creational.abstractfactory.model.ISavingsAccountFactory;
import com.techlabs.creational.abstractfactory.model.SavingsAccountFactory;


public class AccountTest {

	public static void main(String[] args) {
		
		Scanner scanner = new Scanner(System.in);
		
		List<IAccount> users= new ArrayList<IAccount>();
		
		inputUsers(users,scanner);
		
		performTransactions(users,scanner);
		
	}
	
	private static void inputUsers(List<IAccount> users, Scanner scanner) {
		double minimumBalance =500;
		double overDraft = 1000;
		System.out.println("Enter your name: ");
		String name = (scanner.next());
		System.out.println("Enter your balance");		
		double balance = (scanner.nextDouble());
		if(balance < 500) {
			balance = 500;
			System.out.println("Balance entered is less than the 500, balance changed to: " + balance);
		}
		long accountNumber = (long) Math.floor(Math.random() * 9000000000L) + 1000000000L;
		System.out.println("What is your account type(enter 1 for current and 2 for savings): ");
		int input = scanner.nextInt();
		switch(input) {
		case 1:
			ICurrentAccountFactory currentAccountFactory = new CurrentAccountFactory();
			IAccount currentAccount = currentAccountFactory.createAccount(accountNumber, name, balance, overDraft);
			users.add(currentAccount);
			break;
		case 2:
			ISavingsAccountFactory savingsAccountFactory = new SavingsAccountFactory();
			IAccount savingsAccount = savingsAccountFactory.createAccount(accountNumber, name, balance, minimumBalance);
			users.add(savingsAccount);
			break;
		default:
			System.out.println("Enter valid choice");
		}
		System.out.println("Account created!");
		System.out.println("Your account number is: "+ users.get(users.size()-1).getAccountNumber());
		System.out.println("--------------------------");
		
	}
	
	
	private static void performTransactions(List<IAccount> users, Scanner scanner) {
		boolean exit = false;
		int currentUser = accountSwitch(users,scanner);
		
		do {
			System.out.println("--------------------------");
			System.out.println("Welcome "+ users.get(currentUser).getName());
			System.out.println("ATM Menu: \n1. Check Balance \n2. Deposit Money "
					+ "\n3. Withdraw Money \n4. Switch users \n5. Add Account \n6. Display users"
					+ "\n7. Get details of account with maximum balance \n8.Exit");
			int choice = scanner.nextInt();
			
			switch(choice) {
			case 1: System.out.println("Your current balance is: "+ users.get(currentUser).getBalance());break;
			case 2: 
				System.out.println("Enter amount to deposit: ");
				double amount = scanner.nextDouble();
				users.get(currentUser).credit(amount);
				break;
			case 3:
				System.out.println("Enter amount to withdraw: ");
				
				try
				{
					
				if(users.get(currentUser).getAccountType().equals("current")) {
					((CurrentAccount)users.get(currentUser)).debit(scanner.nextInt());
				}
				if(users.get(currentUser).getAccountType().equals("savings")) {
					((SavingsAccount)users.get(currentUser)).debit(scanner.nextInt());
				}
				}
				catch(Exception exception)
				{
					System.out.println(exception.getMessage());
				}
				break;
			case 4:		
				currentUser = accountSwitch(users,scanner);
				break;
			
			case 5: inputUsers(users,scanner); break;
			case 6: displayUsers(users); break;
			case 7: getMaximumBalanceAccount(users); break;
			case 8: exit =true; break;
			default:
				System.out.println("Invalid input. Please select correct option");
			}
			System.out.println("--------------------------");
		}
		while(exit == false);
		
		
		if(exit == true) {
			System.out.println("Thank you for using the ATM. Goodbye!");
		}
		
	}


}
